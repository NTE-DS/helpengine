<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <BuildDir>.\output</BuildDir>
    <DllDir>$(BuildDir)\dll</DllDir>
    <DependencyDir>$(DllDir)\dependency</DependencyDir>
    <CommentsDir>$(BuildDir)\comments</CommentsDir>
    <TopicStyleDir>$(BuildDir)\$(TopicStyle)</TopicStyleDir>
    <OutputDir>$(TopicStyleDir)\output</OutputDir>
    <ProductionTools>$(DxRoot)\ProductionTools</ProductionTools>
    <ProductionTransforms>$(DxRoot)\ProductionTransforms</ProductionTransforms>
    <GenericDir>$(NHSDKROOT)\MsBuildFiles</GenericDir>
    <Internal>false</Internal>
  </PropertyGroup>

  <!--chm/hxs compiliers are installed under '$(ProgramFiles) (x86)' folder on 64-bit machine. -->
  <Choose>
    <When Condition="Exists('$(ProgramFiles) (x86)')">
      <PropertyGroup>
        <ToolsPath>$(ProgramFiles(x86))</ToolsPath>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <ToolsPath>$(ProgramFiles)</ToolsPath>
      </PropertyGroup>
    </Otherwise>
  </Choose>
  
  <Target Name="CopySrcFiles" DependsOnTargets="CreateDirectories">
    <Exec Command="copy &quot;%(Dlls.FullPath)&quot; &quot;$(DllDir)\%(Dlls.Filename)%(Dlls.Extension)&quot;" />
    <Exec Command="copy &quot;%(Comments.FullPath)&quot; &quot;$(CommentsDir)\%(Comments.Filename)%(Comments.Extension)&quot;" 
          Condition="@(Comments)!=''"/>
    <Exec Command="copy &quot;%(Dependents.FullPath)&quot; &quot;$(DependencyDir)\%(Dependents.Filename)%(Dependents.Extension)&quot;" 
          Condition="@(Dependents)!=''"/>
  </Target>
  
  <!--Creating Directories...-->
  <Target Name="CreateDirectories" >
    <!--Deleting Directories-->
    <Message Text="Deleting Directories..." />
    <RemoveDir Condition="Exists('$(TopicStyleDir)')" Directories="$(TopicStyleDir)" />
    <RemoveDir Condition="Exists('$(DllDir)')" Directories="$(DllDir)" />
    <RemoveDir Condition="Exists('$(CommentsDir)')" Directories="$(CommentsDir)" />
    <Message Text="Creating Directories..." />
    <MakeDir Directories="$(BuildDir)" Condition="!Exists('$(BuildDir)')" />
    <MakeDir Directories="$(DllDir)" Condition="!Exists('$(DllDir)')" />
    <MakeDir Directories="$(CommentsDir)" Condition="!Exists('$(CommentsDir)')" />
    <MakeDir Directories="$(DependencyDir)" Condition="!Exists('$(DependencyDir)')" />
    <MakeDir Directories="$(TopicStyleDir)" Condition="!Exists('$(TopicStyleDir)')" />
    <MakeDir Directories="$(TopicStyleDir)\output" Condition="!Exists('$(TopicStyleDir)\output')" />
    <MakeDir Directories="$(TopicStyleDir)\output\html" Condition="!Exists('$(TopicStyleDir)\output\html')" />
    <MakeDir Directories="$(TopicStyleDir)\output\icons" Condition="!Exists('$(TopicStyleDir)\output\icons')" />
    <MakeDir Directories="$(TopicStyleDir)\output\scripts" Condition="!Exists('$(TopicStyleDir)\output\scripts')" />
    <MakeDir Directories="$(TopicStyleDir)\output\styles" Condition="!Exists('$(TopicStyleDir)\output\styles')" />
  </Target>
  
  <!--Call MRefBuilder-->
  <Target Name="Reflection" DependsOnTargets="CreateDirectories;CopySrcFiles">
    <Exec Command='"$(ProductionTools)\MRefBuilder" &quot;$(DllDir)\*.dll&quot; &quot;$(DllDir)\*.exe&quot; /out:&quot;$(TopicStyleDir)\reflection.org&quot; /dep:&quot;$(DependencyDir)\*.dll&quot;,&quot;$(DependencyDir)\*.exe&quot;' Condition="$(Internal)=='false'" />

    <Exec Command='"$(ProductionTools)\MRefBuilder" &quot;$(DllDir)\*.dll&quot; &quot;$(DllDir)\*.exe&quot; /out:&quot;$(TopicStyleDir)\reflection.org&quot; /dep:&quot;$(DependencyDir)\*.dll&quot;,&quot;$(DependencyDir)\*.exe&quot; /internal+' Condition="$(Internal)=='true'" />

    <Exec Condition="'$(TopicStyle)' == 'prototype'" Command='"$(ProductionTools)\XslTransform.exe" /xsl:"$(ProductionTransforms)\ApplyPrototypeDocModel.xsl" /xsl:"$(ProductionTransforms)\AddGuidFilenames.xsl" "$(TopicStyleDir)\reflection.org" /out:"$(TopicStyleDir)\reflection.xml"' />
    <Exec Condition="'$(TopicStyle)' == 'vs2005'" Command='"$(ProductionTools)\XslTransform.exe" /xsl:"$(ProductionTransforms)\ApplyVSDocModel.xsl" /xsl:"$(ProductionTransforms)\AddFriendlyFilenames.xsl" "$(TopicStyleDir)\reflection.org" /out:"$(TopicStyleDir)\reflection.xml" /arg:IncludeAllMembersTopic=true /arg:IncludeInheritedOverloadTopics=true' />
    <Exec Condition="'$(TopicStyle)' == 'hana'" Command='"$(ProductionTools)\XslTransform.exe" /xsl:"$(ProductionTransforms)\ApplyVSDocModel.xsl" /xsl:"$(ProductionTransforms)\AddFriendlyFilenames.xsl" "$(TopicStyleDir)\reflection.org" /out:"$(TopicStyleDir)\reflection.xml" /arg:IncludeAllMembersTopic=false /arg:IncludeInheritedOverloadTopics=true' />
  </Target>
  
  <!--Copy icons,styles and scripts to output-->
  <Target Name="CopyOutput" DependsOnTargets="Reflection">
    <Message Text="Copy icons, styles and scripts to Output..." />
    <Exec Command='copy "$(DXROOT)\Presentation\$(TopicStyle)\icons\*" "$(TopicStyleDir)\output\icons\"'  />
    <Exec Command='copy "$(DXROOT)\Presentation\$(TopicStyle)\scripts\*" "$(TopicStyleDir)\output\scripts\"'  />
    <Exec Command='copy "$(DXROOT)\Presentation\$(TopicStyle)\styles\*" "$(TopicStyleDir)\output\styles\"'  />
  </Target>

  <Target Name="Manifest" DependsOnTargets="Reflection">
    <Exec Command='"$(ProductionTools)\XslTransform"  /xsl:"%DXROOT%\ProductionTransforms\ReflectionToManifest.xsl"  reflection.xml /out:manifest.xml'
         WorkingDirectory="$(TopicStyleDir)" />
  </Target>
  
  <!--Generate an intermediate Toc file that simulates the Whidbey TOC format-->
  <Target Name="Toc" DependsOnTargets="Manifest;CopyOutput">
    <Message Text="Generate an intermediate Toc file that simulates the Whidbey TOC format...." />
    <Exec Condition="$(TopicStyle) == 'prototype'" Command='"$(ProductionTools)\XslTransform" /xsl:"$(DXROOT)\ProductionTransforms\createPrototypetoc.xsl" "$(TopicStyleDir)\reflection.xml" /out:"$(TopicStyleDir)\toc.xml"' />
    <Exec Condition="$(TopicStyle) != 'prototype'" Command='"$(ProductionTools)\XslTransform" /xsl:"$(DXROOT)\ProductionTransforms\createvstoc.xsl" "$(TopicStyleDir)\reflection.xml" /out:"$(TopicStyleDir)\toc.xml"' />
  </Target>
  
  <!--Call MRefBuilder-->
  <Target Name="Html" DependsOnTargets="Toc">
    <Message Text="Call BuildAssembler..." />
    <Exec Command='set reflectionfile=$(TopicStyleDir)\reflection.xml&amp; set CommentsDir=$(CommentsDir)&amp; set OutputDir=$(TopicStyleDir)\output\html&amp; "$(ProductionTools)\BuildAssembler" /config:"$(GenericDir)\vs2005-nxc.config" "$(TopicStyleDir)\manifest.xml"' />
  </Target>

  <!-- Generate NxC help project -->
  <Target Name="NxC" DependsOnTargets="Html">
    <Message Text="Generate NxC help project...." />
    <Exec Command='"$(ProductionTools)\XslTransform.exe" /xsl:"$(NHSDKROOT)\ProductionTransforms\SandcastleTransforms\CreateNxH.xsl" "$(TopicStyleDir)\toc.xml" /arg:fileNamePrefix=$(Name) /out:"$(TopicStyleDir)\Output\$(Name).NxC"' />
    <Exec Command='"$(ProductionTools)\XslTransform.exe" /xsl:"$(NHSDKROOT)\ProductionTransforms\SandcastleTransforms\TocToNxTContents.xsl" "$(TopicStyleDir)\toc.xml" /arg:htmlDir="$(OutputDir)\html" /out:"$(TopicStyleDir)\Output\$(Name).NxT"' />
    <Exec Command='"$(NHSDKROOT)\bin\HelpCompiler.exe" -CompileNXC="$(TopicStyleDir)\Output\$(Name).NxC"' />
  </Target>
</Project>